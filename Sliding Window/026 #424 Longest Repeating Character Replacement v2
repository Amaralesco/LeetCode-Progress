
/*  Day 22"/150  
    Neetcode: Solved 22/150
    Leetcode: Solved 13 Easy 13 Medium
Challenge: #424. Longest Repeating Character Replacement
*/

//Not my solution

/*
    Given a string s & an int k, can change any char k times:
    Return length of longest substring containing same letter
    Ex. s = "ABAB" k = 2 -> 4 "AAAA", s = "AABABBA" k = 1 -> 4

    Sliding window, expand if can change char, contract if > k

    Time: O(n)
    Space: O(26)
*/

class Solution {
public:
    int characterReplacement(string s, int k) {
        vector<int> count(26);
        int maxCount = 0;

        int res = 0;

        int left = 0;
        int right = left;

        while(right < s.size()){
            count[s[right] - 'A']++;

            maxCount = max(maxCount,count[s[right] - 'A'] );
            if(right-left +1 - maxCount >k){
                count[s[left] - 'A']--;
                left++;    
            }
            res = max(res, right-left +1 );
            right++;
        }

        return res;
    }
};