/* Day 6/150  
    Neetcode: Solved 8/150
    Leetcode: Solved 10 Easy 1 Medium
Challenge: #168. Two Sum II
Learnt: Problem solving and execution of 2 pointers
*/

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int j = numbers.size()-1;
        int i = 0;
        int sum;
        vector<int> solution;
        while(i<j){
            sum = numbers[i]+numbers[j];
            if(sum<target){
                i++;
            }
            else if(sum>target){
                j--;
            }
            else{
                solution.push_back(++i);
                solution.push_back(++j);
                break;
            }
        } 
        
        return solution;
    }
};


//User the same method as the Two Sum I, but then realised it was not necessary because it is ordered already
/* class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        vector<int> solution;
        map<int,int> map; // val : index
        //Target - Value1 = Value2

        for(int i = 0; i<numbers.size();i++){
            if(map.find(target-numbers[i]) != map.end()){
                //Found it
                solution.push_back(map[target-numbers[i]]+1);
                solution.push_back(i+1);
            }   
            else{
                map.insert({ numbers[i], i });
            }
        

        }
        return solution;
    }
}; */