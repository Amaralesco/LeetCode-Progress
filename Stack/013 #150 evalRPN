/* Day 9/150  
    Neetcode: Solved 10/150
    Leetcode: Solved 10 Easy 3 Medium
Challenge: #150 Evaluate Reverse Polish Notation aka weird calculator with stack
Learnt: Good to practice problem solving

Convert string to int with stoi(), then push it to stack if its a number, else (aka operand) make two pops and do the respective calc. Key part is pushing the solution back to the stack, so it is first parameter of the next calculation
*/

class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        stack<int> pile;
        int solution = 0;
        
        for(int i = 0; i<tokens.size();i++){
            string token = tokens[i];
            if(token <= "9" && token >= "0" ||  token.size() > 1 /* to check for numbers bigger than 9 */){ //ascii representation
            //cout << "its a number: "<< token << endl;
            pile.push(stoi(token));
            }
            else {
                printf("its not");
                //cout << pile.pop() << " " << pile.pop();
                int y= pile.top();
                pile.pop();
                
                int x= pile.top();
                pile.pop();
                
                if(token == "+"){
                    solution = x+y;
                }
                else if(token == "-"){
                    solution = x-y;
                }
                else if(token == "/"){
                    solution = x/y;
                }
                else if(token == "*"){
                    solution = x*y;
                }   
                pile.push(solution);
            }
        }
    return pile.top();
    }
};